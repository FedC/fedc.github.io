@use "sass:math";

$base-size: 200px;
$center-size: math.div($base-size, 1.5); 
$smallCircleSize: math.div($base-size, 3);
$radius: math.div($base-size, 2); // Corrected radius for proper spacing

.circleContainer {
  position: relative;
  width: clamp(260px, 40vw, $base-size);
  height: clamp(260px, 40vw, $base-size);
  display: flex;
  justify-content: center;
  align-items: center;

  transform: translate3d(0, 20px, 0); // Force GPU acceleration
}

.centerCircle {
  width: clamp($base-size, 18vw, $center-size);
  height: clamp($base-size, 18vw, $center-size);
  border-radius: 50%;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: clamp(14px, 1.5vw, 18px);
  font-weight: bold;
  color: #333;
  border: 3px solid white;
  background-color: rgb(243, 233, 212);
}

/* Surrounding Circles */
.circle {
  width: clamp(120px, 10vw, $smallCircleSize);
  height: clamp(120px, 10vw, $smallCircleSize);
  border-radius: 50%;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: clamp(12px, 1.5vw, 16px);
  font-weight: bold;
  color: var(--dark-orange-text);
  border: 3px solid rgb(246, 171, 11);
  background-color: rgba(229, 183, 97, 0.5);
  padding: 10px;
}

$pi: math.div(22, 7);

@function deg-to-rad($degrees) {
  @return math.div($degrees * $pi, 180);
}

/* Distribute 7 circles evenly using trigonometry */
@for $i from 1 through 7 {
  $angle: math.div($i * $pi, 3.5);

  $xOffset: math.cos($angle) * $radius * 1.4;
  $yOffset: math.sin($angle) * $radius * 1.4;

  .circle:nth-child(#{$i + 1}) { // Offset by 1 to account for center circle
    transform: translate($xOffset, $yOffset);
  }
}

/* Adjust text for better readability */
.circleText {
  max-width: 70%;
  max-height: 70%;
  font-weight: 400;
  color: var(--dark-orange-text);
  margin: 0;
  line-height: 1;
  text-transform: lowercase;
  text-align: center;
}

@media (max-width: 768px) {
  $base-size: 180px;
  $center-size: math.div($base-size, 1.5); 
  $smallCircleSize: math.div($base-size, 3);
  $radius: math.div($base-size, 2); // Corrected radius for proper spacing

  .circleContainer {
    width: clamp(200px, 80vw, $base-size);
    height: clamp(200px, 80vw, $base-size);
  }

  .centerCircle {
    width: clamp($base-size, 18vw, $center-size);
    height: clamp($base-size, 18vw, $center-size);
    font-size: clamp(12px, 1.5vw, 16px);
  }

  .circle {
    width: clamp(100px, 10vw, $smallCircleSize);
    height: clamp(100px, 10vw, $smallCircleSize);
    font-size: clamp(10px, 1.5vw, 14px);
    padding: 8px;
  }

  .circleText {
    font-size: clamp(14px, 1.5vw, 18px);
  }

  /* Adjust circle positions */
  @for $i from 1 through 7 {
    $angle: math.div($i * $pi, 3.5);

    $xOffset: math.cos($angle) * $radius * 1.3;
    $yOffset: math.sin($angle) * $radius * 1.3;

    .circle:nth-child(#{$i + 1}) { // Offset by 1 to account for center circle
      transform: translate($xOffset, $yOffset);
    }
  }
}